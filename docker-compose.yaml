version: '3.9'

services:
  app:
    build: .
    ports:
      - "8000:8080"
    depends_on:
      - postgres
      - mongo
      - redis
      - rabbitmq
    environment:
      POSTGRES_DATASOURCE_USERNAME: postgres
      POSTGRES_DATASOURCE_PASSWORD: example
      POSTGRES_PORT: 5432
      POSTGRES_HOST: postgres
      POSTGRES_DATABASE_NAME: companymanager
      MONGO_PORT: 27017
      MONGO_HOST: mongo
      MONGODB_USERNAME: mongo
      MONGODB_PASSWORD: example
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: example
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 15672
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: example
    networks:
      - companymanager

  postgres:
    image: postgres
    #TODO temporary expose
    ports:
      - "5432:5432"
    expose:
      - "5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: companymanager
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./sql/insert_data.sql:/docker-entrypoint-initdb.d/insert_data.sql
    networks:
      - companymanager

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/data/db
    networks:
      - companymanager

  redis:
    image: redis
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - companymanager

  rabbitmq:
    image: rabbitmq:management
    environment:
      - RABBITMQ_DEFAULT_USER=rabbit
      - RABBITMQ_DEFAULT_PASS=example
    networks:
      - companymanager

networks:
  companymanager:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
  postgres_data:
